<?php
/**
 * Implements hook_field_attach_view_alter().
 *
 * Show titles of empty fields.
 */
function display_empty_fields_field_attach_view_alter(&$output, $context) {
  $allowed_entity_types = array('profile2', 'user', 'node', 'field_collection_item');
  if (!in_array($context['entity_type'], $allowed_entity_types)) {
    return;
  }

  list($id, $vid, $bundle) = entity_extract_ids($context['entity_type'], $context['entity']);
  // Load all instances of the fields for the node.
  $instances = _field_invoke_get_instances($context['entity_type'], $bundle, array('default' => TRUE, 'deleted' => FALSE));
  $language = entity_language($context['entity_type'], $context['entity']);
  foreach ($instances as $field_name => $instance) {
    // Set content for fields they are empty.
    if (empty($context['entity']->{$field_name})) {
      $display = field_get_display($instance, '*', $context['entity']);
      // Do not add field that is hidden in current display.
      if ($display['type'] == 'hidden') {
        continue;
      }
      // Load field settings.
      $field = field_info_field($field_name);
      // Set output for field.
      $output[$field_name] = array(
        '#theme' => 'field',
        '#title' => $instance['label'],
        '#label_display' => 'above',
        '#field_type' => $field['type'],
        '#field_name' => $field_name,
        '#bundle' => $bundle,
        '#object' => $context['entity'],
        '#items' => array(0 => array()),
        '#entity_type' => $context['entity_type'],
        '#weight' => $display['weight'],
        '#view_mode' => 'full',
        '#access' => TRUE,
        0 => array('#markup' => '&nbsp;'),
        '#formatter' => $display['type']
      );
      if ($field['type'] == 'field_collection') {
        unset($output[$field_name][0]['#markup']);
        $fc = entity_create('field_collection_item', array('field_name' => $field_name));
        $fcv = entity_view('field_collection_item', array($fc), $view_mode = 'full', $language);
        $output[$field_name][0]['entity'] = $fcv;
        $output[$field_name]['#formatter'] = 'field_collection_fields';
      }
    }
  }
}

/**
 * Implements hook_panels_pane_content_alter().
 * To support panels.
 */
function display_empty_fields_panels_pane_content_alter(&$content, $pane, $args, $contexts) {
  // Consider empty field panes only.
  if (empty($content) && $pane->type == 'entity_field' && !empty($pane->subtype)) {
    $plugin = ctools_get_content_type($pane->type);
    $pane_context = ctools_content_select_context($plugin, $pane->subtype, $pane->configuration, $contexts);
    $entity = $pane_context->data;
    // Early exit if entity is not present.
    // Without entity we cannot determine the field and preapre dummy output.
    if (empty($entity)) {
      return;
    }

    list($entity_type, $field_name) = explode(':', $pane->subtype);
    $language = entity_language($entity_type, $entity);

    list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
    if (empty($bundle)) {
      $bundle = $entity_type;
    }

    // Get field info.
    $instances = _field_invoke_get_instances($entity_type, $bundle, array('default' => TRUE, 'deleted' => FALSE, 'field_name' => $field_name));
    $field = field_info_field($field_name);
    $display = field_get_display($instances[0], '*', $entity);

    $output = array(
      '#theme' => 'field',
      '#title' => $instances[0]['label'],
      '#label_display' => 'above',
      '#field_type' => $field['type'],
      '#field_name' => $field_name,
      '#bundle' => $bundle,
      '#object' => $entity,
      '#items' => array(0 => array()),
      '#entity_type' => $entity_type,
      '#weight' => $display['weight'],
      '#view_mode' => 'full',
      '#access' => TRUE,
      0 => array('#markup' => '&nbsp;'),
      '#formatter' => $display['type']
    );
    if ($field['type'] == 'field_collection') {
      unset($output[0]['#markup']);
      $fc = entity_create('field_collection_item', array('field_name' => $field_name));
      $fcv = entity_view('field_collection_item', array($fc), $view_mode = 'full', $language);
      $output[0]['entity'] = $fcv;
      $output['#formatter'] = 'field_collection_fields';
    }

    // Prepare output for field pane.
    $block = new stdClass();
    $block->module  = 'entity_field';
    if ($pane->configuration['label'] == 'title' && isset($instances[0]['label'])) {
      $block->title = $instances[0]['label'];
    }

    $block->content = $output;
    $block->delta   = $id;
    $block->type = $pane->type;
    $block->subtype = $pane->subtype;
    $content = $block;
  }
}
